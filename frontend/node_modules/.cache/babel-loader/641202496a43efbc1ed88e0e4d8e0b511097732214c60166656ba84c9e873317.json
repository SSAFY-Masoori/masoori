{"ast":null,"code":"import { instance } from \"@/apis/instance\";\n// 사용자 추천 카드 리스트 조회 API\nconst getAllCreditcard = async () => {\n  try {\n    const response = await instance.get(`/creditcard`);\n    return response.data;\n  } catch {\n    new Error(\"api 연동 오류 - getAllCreditcard\");\n  }\n};\n\n// 카드 상세 정보 조회 조회 API\nconst getCreditcard = async cardId => {\n  try {\n    const response = await instance.get(`/creditcard/${cardId}`);\n    return response.data;\n  } catch {\n    new Error(\"api 연동 오류 - getCreditcard\");\n  }\n};\n\n// 월간 소비 분석 API\nconst getAnalyticsMonth = async () => {\n  try {\n    const response = await instance.get(`/analytics/month`);\n    return response.data;\n  } catch {\n    new Error(\"api 연동 오류 - getAnalyticsMonth\");\n  }\n};\n\n// 조회 시작일과 종료일을 통해 유저의 챌린지 카드들을 조회\nconst getAllChallengeCard = async challengeDate => {\n  try {\n    const response = await instance.get(`/card/challengecard`, {\n      params: challengeDate\n    });\n    return response.data;\n  } catch {\n    new Error(\"api 연동 오류 - getAllChallengeCard\");\n  }\n};\n\n// 유저에게 할당되어 있는 챌린지카드와 챌린지를 연,월일을 통해 조회한다.\nconst getChallengeCard = async id => {\n  try {\n    const response = await instance.get(`/card/challenge/${id}`);\n    return response.data;\n  } catch {\n    new Error(\"api 연동 오류 - getChallengeCard\");\n  }\n};\nconst getConsume = async id => {\n  try {\n    const response = await instance.get(`/card/consume/${id}`);\n    return response.data;\n  } catch {\n    new Error(\"api 연동 오류 - getConsume\");\n  }\n};\nexport { getAllCreditcard, getCreditcard, getAnalyticsMonth, getChallengeCard, getAllChallengeCard, getConsume };","map":{"version":3,"names":["instance","getAllCreditcard","response","get","data","Error","getCreditcard","cardId","getAnalyticsMonth","getAllChallengeCard","challengeDate","params","getChallengeCard","id","getConsume"],"sources":["C:/Users/SSAFY/Desktop/S09P22B308/frontend/src/apis/dictionary/dictionaryAPI.ts"],"sourcesContent":["import { instance } from \"@/apis/instance\";\r\nimport { AllChallengeCardProps } from \"@/types/dictionaryType\";\r\n\r\n// 사용자 추천 카드 리스트 조회 API\r\nconst getAllCreditcard = async () => {\r\n  try {\r\n    const response = await instance.get(`/creditcard`);\r\n    return response.data;\r\n  } catch {\r\n    new Error(\"api 연동 오류 - getAllCreditcard\");\r\n  }\r\n};\r\n\r\n// 카드 상세 정보 조회 조회 API\r\nconst getCreditcard = async (cardId: number) => {\r\n  try {\r\n    const response = await instance.get(`/creditcard/${cardId}`);\r\n    return response.data;\r\n  } catch {\r\n    new Error(\"api 연동 오류 - getCreditcard\");\r\n  }\r\n};\r\n\r\n// 월간 소비 분석 API\r\nconst getAnalyticsMonth = async () => {\r\n  try {\r\n    const response = await instance.get(`/analytics/month`);\r\n    return response.data;\r\n  } catch {\r\n    new Error(\"api 연동 오류 - getAnalyticsMonth\");\r\n  }\r\n};\r\n\r\n// 조회 시작일과 종료일을 통해 유저의 챌린지 카드들을 조회\r\nconst getAllChallengeCard = async (challengeDate: AllChallengeCardProps) => {\r\n  try {\r\n    const response = await instance.get(`/card/challengecard`, {\r\n      params: challengeDate,\r\n    });\r\n    return response.data;\r\n  } catch {\r\n    new Error(\"api 연동 오류 - getAllChallengeCard\");\r\n  }\r\n};\r\n\r\n// 유저에게 할당되어 있는 챌린지카드와 챌린지를 연,월일을 통해 조회한다.\r\nconst getChallengeCard = async (id: number) => {\r\n  try {\r\n    const response = await instance.get(`/card/challenge/${id}`);\r\n    return response.data;\r\n  } catch {\r\n    new Error(\"api 연동 오류 - getChallengeCard\");\r\n  }\r\n};\r\n\r\nconst getConsume = async (id: number) => {\r\n  try {\r\n    const response = await instance.get(`/card/consume/${id}`);\r\n    return response.data;\r\n  } catch {\r\n    new Error(\"api 연동 오류 - getConsume\");\r\n  }\r\n};\r\n\r\nexport {\r\n  getAllCreditcard,\r\n  getCreditcard,\r\n  getAnalyticsMonth,\r\n  getChallengeCard,\r\n  getAllChallengeCard,\r\n  getConsume,\r\n};\r\n"],"mappings":"AAAA,SAASA,QAAQ,QAAQ,iBAAiB;AAG1C;AACA,MAAMC,gBAAgB,GAAG,MAAAA,CAAA,KAAY;EACnC,IAAI;IACF,MAAMC,QAAQ,GAAG,MAAMF,QAAQ,CAACG,GAAG,CAAE,aAAY,CAAC;IAClD,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,MAAM;IACN,IAAIC,KAAK,CAAC,8BAA8B,CAAC;EAC3C;AACF,CAAC;;AAED;AACA,MAAMC,aAAa,GAAG,MAAOC,MAAc,IAAK;EAC9C,IAAI;IACF,MAAML,QAAQ,GAAG,MAAMF,QAAQ,CAACG,GAAG,CAAE,eAAcI,MAAO,EAAC,CAAC;IAC5D,OAAOL,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,MAAM;IACN,IAAIC,KAAK,CAAC,2BAA2B,CAAC;EACxC;AACF,CAAC;;AAED;AACA,MAAMG,iBAAiB,GAAG,MAAAA,CAAA,KAAY;EACpC,IAAI;IACF,MAAMN,QAAQ,GAAG,MAAMF,QAAQ,CAACG,GAAG,CAAE,kBAAiB,CAAC;IACvD,OAAOD,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,MAAM;IACN,IAAIC,KAAK,CAAC,+BAA+B,CAAC;EAC5C;AACF,CAAC;;AAED;AACA,MAAMI,mBAAmB,GAAG,MAAOC,aAAoC,IAAK;EAC1E,IAAI;IACF,MAAMR,QAAQ,GAAG,MAAMF,QAAQ,CAACG,GAAG,CAAE,qBAAoB,EAAE;MACzDQ,MAAM,EAAED;IACV,CAAC,CAAC;IACF,OAAOR,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,MAAM;IACN,IAAIC,KAAK,CAAC,iCAAiC,CAAC;EAC9C;AACF,CAAC;;AAED;AACA,MAAMO,gBAAgB,GAAG,MAAOC,EAAU,IAAK;EAC7C,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMF,QAAQ,CAACG,GAAG,CAAE,mBAAkBU,EAAG,EAAC,CAAC;IAC5D,OAAOX,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,MAAM;IACN,IAAIC,KAAK,CAAC,8BAA8B,CAAC;EAC3C;AACF,CAAC;AAED,MAAMS,UAAU,GAAG,MAAOD,EAAU,IAAK;EACvC,IAAI;IACF,MAAMX,QAAQ,GAAG,MAAMF,QAAQ,CAACG,GAAG,CAAE,iBAAgBU,EAAG,EAAC,CAAC;IAC1D,OAAOX,QAAQ,CAACE,IAAI;EACtB,CAAC,CAAC,MAAM;IACN,IAAIC,KAAK,CAAC,wBAAwB,CAAC;EACrC;AACF,CAAC;AAED,SACEJ,gBAAgB,EAChBK,aAAa,EACbE,iBAAiB,EACjBI,gBAAgB,EAChBH,mBAAmB,EACnBK,UAAU"},"metadata":{},"sourceType":"module","externalDependencies":[]}