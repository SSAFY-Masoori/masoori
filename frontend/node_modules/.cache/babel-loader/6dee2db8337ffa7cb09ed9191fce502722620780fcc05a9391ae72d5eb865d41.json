{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SSAFY\\\\Desktop\\\\S09P22B308\\\\frontend\\\\src\\\\components\\\\toggle\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ToggleSwitch = ({\n  textOn,\n  textOff,\n  backgroundImage,\n  backgroundColor,\n  initialValue // Add this prop\n}) => {\n  _s();\n  const [isChecked, setIsChecked] = useState(initialValue); // Initialize isChecked with the provided initialValue\n\n  const toggleSwitch = () => {\n    setIsChecked(!isChecked);\n  };\n  const toggleId = Math.random().toString(36).substring(7); // Generate a unique id\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ToggleCheckbox, {\n      id: `toggle-${toggleId}`,\n      checked: isChecked,\n      onChange: toggleSwitch\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ToggleLabel, {\n      htmlFor: `toggle-${toggleId}`,\n      bgImage: backgroundImage,\n      bgColor: backgroundColor,\n      children: [/*#__PURE__*/_jsxDEV(ToggleLabelBackground, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Text, {\n        isChecked: isChecked,\n        children: isChecked ? textOn : textOff\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n_s(ToggleSwitch, \"EY6MfpJPfON6dEPjrvuuiwcSgwE=\");\n_c = ToggleSwitch;\nvar _c;\n$RefreshReg$(_c, \"ToggleSwitch\");","map":{"version":3,"names":["ToggleSwitch","textOn","textOff","backgroundImage","backgroundColor","initialValue","_s","isChecked","setIsChecked","useState","toggleSwitch","toggleId","Math","random","toString","substring","_jsxDEV","_Fragment","children","ToggleCheckbox","id","checked","onChange","fileName","_jsxFileName","lineNumber","columnNumber","ToggleLabel","htmlFor","bgImage","bgColor","ToggleLabelBackground","Text","_c","$RefreshReg$"],"sources":["C:/Users/SSAFY/Desktop/S09P22B308/frontend/src/components/toggle/index.tsx"],"sourcesContent":["const ToggleSwitch = ({\r\n  textOn,\r\n  textOff,\r\n  backgroundImage,\r\n  backgroundColor,\r\n  initialValue, // Add this prop\r\n}: ToggleSwitchProps) => {\r\n  const [isChecked, setIsChecked] = useState(initialValue); // Initialize isChecked with the provided initialValue\r\n\r\n  const toggleSwitch = () => {\r\n    setIsChecked(!isChecked);\r\n  };\r\n\r\n  const toggleId = Math.random().toString(36).substring(7); // Generate a unique id\r\n\r\n  return (\r\n    <>\r\n      <ToggleCheckbox\r\n        id={`toggle-${toggleId}`}\r\n        checked={isChecked}\r\n        onChange={toggleSwitch}\r\n      />\r\n      <ToggleLabel\r\n        htmlFor={`toggle-${toggleId}`}\r\n        bgImage={backgroundImage}\r\n        bgColor={backgroundColor}\r\n      >\r\n        <ToggleLabelBackground />\r\n        <Text isChecked={isChecked}>{isChecked ? textOn : textOff}</Text>\r\n      </ToggleLabel>\r\n    </>\r\n  );\r\n};\r\n"],"mappings":";;;;AAAA,MAAMA,YAAY,GAAGA,CAAC;EACpBC,MAAM;EACNC,OAAO;EACPC,eAAe;EACfC,eAAe;EACfC,YAAY,CAAE;AACG,CAAC,KAAK;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGC,QAAQ,CAACJ,YAAY,CAAC,CAAC,CAAC;;EAE1D,MAAMK,YAAY,GAAGA,CAAA,KAAM;IACzBF,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,MAAMI,QAAQ,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;;EAE1D,oBACEC,OAAA,CAAAC,SAAA;IAAAC,QAAA,gBACEF,OAAA,CAACG,cAAc;MACbC,EAAE,EAAG,UAAST,QAAS,EAAE;MACzBU,OAAO,EAAEd,SAAU;MACnBe,QAAQ,EAAEZ;IAAa;MAAAa,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACxB,CAAC,eACFV,OAAA,CAACW,WAAW;MACVC,OAAO,EAAG,UAASjB,QAAS,EAAE;MAC9BkB,OAAO,EAAE1B,eAAgB;MACzB2B,OAAO,EAAE1B,eAAgB;MAAAc,QAAA,gBAEzBF,OAAA,CAACe,qBAAqB;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACzBV,OAAA,CAACgB,IAAI;QAACzB,SAAS,EAAEA,SAAU;QAAAW,QAAA,EAAEX,SAAS,GAAGN,MAAM,GAAGC;MAAO;QAAAqB,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACtD,CAAC;EAAA,eACd,CAAC;AAEP,CAAC;AAACpB,EAAA,CAhCIN,YAAY;AAAAiC,EAAA,GAAZjC,YAAY;AAAA,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}