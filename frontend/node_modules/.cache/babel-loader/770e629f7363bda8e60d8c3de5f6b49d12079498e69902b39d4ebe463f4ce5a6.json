{"ast":null,"code":"// slide\n(function (window, factory) {\n  // universal module definition\n  if (typeof module == 'object' && module.exports) {\n    // CommonJS\n    module.exports = factory();\n  } else {\n    // browser global\n    window.Flickity = window.Flickity || {};\n    window.Flickity.Slide = factory();\n  }\n})(typeof window != 'undefined' ? window : this, function factory() {\n  function Slide(beginMargin, endMargin, cellAlign) {\n    this.beginMargin = beginMargin;\n    this.endMargin = endMargin;\n    this.cellAlign = cellAlign;\n    this.cells = [];\n    this.outerWidth = 0;\n    this.height = 0;\n  }\n  let proto = Slide.prototype;\n  proto.addCell = function (cell) {\n    this.cells.push(cell);\n    this.outerWidth += cell.size.outerWidth;\n    this.height = Math.max(cell.size.outerHeight, this.height);\n    // first cell stuff\n    if (this.cells.length === 1) {\n      this.x = cell.x; // x comes from first cell\n      this.firstMargin = cell.size[this.beginMargin];\n    }\n  };\n  proto.updateTarget = function () {\n    let lastCell = this.getLastCell();\n    let lastMargin = lastCell ? lastCell.size[this.endMargin] : 0;\n    let slideWidth = this.outerWidth - (this.firstMargin + lastMargin);\n    this.target = this.x + this.firstMargin + slideWidth * this.cellAlign;\n  };\n  proto.getLastCell = function () {\n    return this.cells[this.cells.length - 1];\n  };\n  proto.select = function () {\n    this.cells.forEach(cell => cell.select());\n  };\n  proto.unselect = function () {\n    this.cells.forEach(cell => cell.unselect());\n  };\n  proto.getCellElements = function () {\n    return this.cells.map(cell => cell.element);\n  };\n  return Slide;\n});","map":null,"metadata":{},"sourceType":"script","externalDependencies":[]}