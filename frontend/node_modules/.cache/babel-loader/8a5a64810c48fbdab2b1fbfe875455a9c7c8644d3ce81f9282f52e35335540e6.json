{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SSAFY\\\\Desktop\\\\S09P22B308\\\\frontend\\\\src\\\\components\\\\specialSelectModal\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport { useAllChallengeCard } from \"@/apis/dictionary/Queries/useAllChallengeCard\";\nimport { specialIdState } from \"@/states/dictionaryState\";\nimport { useNavigate } from \"react-router-dom\";\nimport { useSetRecoilState } from \"recoil\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Container = styled.div`\n  display: grid;\n  grid-template-columns: repeat(4, minmax(275px, 1fr));\n  grid-gap: 2rem;\n  margin: 2rem;\n`;\n_c = Container;\nconst Card = styled.div`\n  height: 340px;\n  position: relative;\n  overflow: hidden;\n  border-radius: 8px;\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.25);\n  display: grid;\n  grid-template-rows: 1fr 1fr;\n  transition: 0.8s cubic-bezier(0.2, 0.8, 0.2, 1);\n\n  &:hover {\n    transform: scale(1.035, 1.035);\n    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.5);\n  }\n`;\n_c2 = Card;\nconst H3 = styled.h3`\n  color: white;\n  font-size: 24px;\n  margin: 20px 0 0 20px;\n  text-align: left;\n`;\n_c3 = H3;\nconst P = styled.p`\n  color: white;\n  font-weight: 400;\n  font-size: 16px;\n  align-self: end;\n  margin: 0 0 20px 20px;\n  letter-spacing: 0.5px;\n  text-align: left;\n`;\n_c4 = P;\nconst Img = styled.img`\n  position: absolute;\n  top: 0;\n  height: 120%;\n  width: 100%;\n  z-index: -1;\n  transition: 0.8s cubic-bezier(0.2, 0.8, 0.2, 1);\n\n  ${Card}:hover & {\n    transform: translateY(-10px);\n  }\n`;\n_c5 = Img;\nfunction extractYearAndMonth(createdDate) {\n  // createdDate 문자열을 Date 객체로 변환\n  const date = new Date(createdDate);\n\n  // 년도와 월을 추출\n  const year = date.getFullYear();\n  const month = date.getMonth() + 1; // 월은 0부터 시작하므로 1을 더해줍니다.\n\n  return {\n    year,\n    month\n  };\n}\nconst SpecialSelectModal = ({\n  toggleModal\n}) => {\n  _s();\n  const currentDate = new Date();\n  currentDate.setHours(0, 0, 0, 0); // Set hours, minutes, seconds, and milliseconds to zero\n  const initialEndDate = currentDate.toISOString().slice(0, -2);\n  const AllChallenge = useAllChallengeCard(\"2000-09-16T07:42:34.76\", initialEndDate).userCardList;\n  const navigate = useNavigate();\n  const setSpecialId = useSetRecoilState(specialIdState);\n  const goCardSpecial = id => {\n    setSpecialId(id);\n    toggleModal();\n    // navigate(\"/dictionary\");\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    toggleModal: toggleModal,\n    children: AllChallenge.map(card => /*#__PURE__*/_jsxDEV(Card, {\n      onClick: () => goCardSpecial(card.id),\n      children: [/*#__PURE__*/_jsxDEV(Img, {\n        src: card.imagePath,\n        alt: \"Card Image\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(H3, {\n        children: card.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(P, {\n        children: [extractYearAndMonth(card.createdDate).year, \"\\uB144\", \" \", extractYearAndMonth(card.createdDate).month, \"\\uC6D4\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 11\n      }, this)]\n    }, card.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n};\n_s(SpecialSelectModal, \"apVd+Pb8KTiTH0+iygpiS/mRdJA=\", false, function () {\n  return [useAllChallengeCard, useNavigate, useSetRecoilState];\n});\n_c6 = SpecialSelectModal;\nexport default SpecialSelectModal;\nvar _c, _c2, _c3, _c4, _c5, _c6;\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Card\");\n$RefreshReg$(_c3, \"H3\");\n$RefreshReg$(_c4, \"P\");\n$RefreshReg$(_c5, \"Img\");\n$RefreshReg$(_c6, \"SpecialSelectModal\");","map":{"version":3,"names":["useAllChallengeCard","specialIdState","useNavigate","useSetRecoilState","styled","jsxDEV","_jsxDEV","Container","div","_c","Card","_c2","H3","h3","_c3","P","p","_c4","Img","img","_c5","extractYearAndMonth","createdDate","date","Date","year","getFullYear","month","getMonth","SpecialSelectModal","toggleModal","_s","currentDate","setHours","initialEndDate","toISOString","slice","AllChallenge","userCardList","navigate","setSpecialId","goCardSpecial","id","children","map","card","onClick","src","imagePath","alt","fileName","_jsxFileName","lineNumber","columnNumber","name","_c6","$RefreshReg$"],"sources":["C:/Users/SSAFY/Desktop/S09P22B308/frontend/src/components/specialSelectModal/index.tsx"],"sourcesContent":["import { useAllChallengeCard } from \"@/apis/dictionary/Queries/useAllChallengeCard\";\r\nimport { specialIdState } from \"@/states/dictionaryState\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport { useSetRecoilState } from \"recoil\";\r\nimport styled from \"styled-components\";\r\n\r\nexport interface StyledSpecialSelectModalProps {\r\n  toggleModal: () => void;\r\n}\r\n\r\ninterface AllChallengeProps {\r\n  id: number;\r\n  name: string;\r\n  imagePath: string;\r\n  createdDate: string;\r\n  cardType: string;\r\n}\r\n\r\nconst Container = styled.div<StyledSpecialSelectModalProps>`\r\n  display: grid;\r\n  grid-template-columns: repeat(4, minmax(275px, 1fr));\r\n  grid-gap: 2rem;\r\n  margin: 2rem;\r\n`;\r\n\r\nconst Card = styled.div`\r\n  height: 340px;\r\n  position: relative;\r\n  overflow: hidden;\r\n  border-radius: 8px;\r\n  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.25);\r\n  display: grid;\r\n  grid-template-rows: 1fr 1fr;\r\n  transition: 0.8s cubic-bezier(0.2, 0.8, 0.2, 1);\r\n\r\n  &:hover {\r\n    transform: scale(1.035, 1.035);\r\n    box-shadow: 0 15px 30px rgba(0, 0, 0, 0.5);\r\n  }\r\n`;\r\n\r\nconst H3 = styled.h3`\r\n  color: white;\r\n  font-size: 24px;\r\n  margin: 20px 0 0 20px;\r\n  text-align: left;\r\n`;\r\n\r\nconst P = styled.p`\r\n  color: white;\r\n  font-weight: 400;\r\n  font-size: 16px;\r\n  align-self: end;\r\n  margin: 0 0 20px 20px;\r\n  letter-spacing: 0.5px;\r\n  text-align: left;\r\n`;\r\n\r\nconst Img = styled.img`\r\n  position: absolute;\r\n  top: 0;\r\n  height: 120%;\r\n  width: 100%;\r\n  z-index: -1;\r\n  transition: 0.8s cubic-bezier(0.2, 0.8, 0.2, 1);\r\n\r\n  ${Card}:hover & {\r\n    transform: translateY(-10px);\r\n  }\r\n`;\r\n\r\nfunction extractYearAndMonth(createdDate: string) {\r\n  // createdDate 문자열을 Date 객체로 변환\r\n  const date = new Date(createdDate);\r\n\r\n  // 년도와 월을 추출\r\n  const year = date.getFullYear();\r\n  const month = date.getMonth() + 1; // 월은 0부터 시작하므로 1을 더해줍니다.\r\n\r\n  return { year, month };\r\n}\r\n\r\nconst SpecialSelectModal = ({ toggleModal }: StyledSpecialSelectModalProps) => {\r\n  const currentDate = new Date();\r\n  currentDate.setHours(0, 0, 0, 0); // Set hours, minutes, seconds, and milliseconds to zero\r\n  const initialEndDate = currentDate.toISOString().slice(0, -2);\r\n\r\n  const AllChallenge = useAllChallengeCard(\r\n    \"2000-09-16T07:42:34.76\",\r\n    initialEndDate\r\n  ).userCardList;\r\n\r\n  const navigate = useNavigate();\r\n\r\n  const setSpecialId = useSetRecoilState(specialIdState);\r\n  const goCardSpecial = (id: number) => {\r\n    setSpecialId(id);\r\n    toggleModal();\r\n    // navigate(\"/dictionary\");\r\n  };\r\n\r\n  return (\r\n    <Container toggleModal={toggleModal}>\r\n      {AllChallenge.map((card: AllChallengeProps) => (\r\n        <Card key={card.id} onClick={() => goCardSpecial(card.id)}>\r\n          <Img src={card.imagePath} alt=\"Card Image\" />\r\n          <H3>{card.name}</H3>\r\n          <P>\r\n            {extractYearAndMonth(card.createdDate).year}년{\" \"}\r\n            {extractYearAndMonth(card.createdDate).month}월\r\n          </P>\r\n        </Card>\r\n      ))}\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default SpecialSelectModal;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}