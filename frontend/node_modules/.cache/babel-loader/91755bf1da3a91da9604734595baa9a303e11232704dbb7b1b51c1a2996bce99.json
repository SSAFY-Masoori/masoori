{"ast":null,"code":"// import React, { useEffect, useState } from \"react\";\n// import styled from \"styled-components\";\n// import background from \"@/assets/img/background/silkBackground.jpg\";\n// import TarotCard from \"@/components/tarotCard\";\n// import tarotCardFront from \"@/assets/img/tarotCard/tarotCardFront.png\";\n// import tarotCardBack from \"@/assets/img/tarotCard/tarotCardBack.png\";\n// import HashTag from \"@/components/hashtag\";\n// import TextBubble from \"@/components/textBubble\";\n// import { StyledTextBubbleProps } from \"@/types/luckType\";\n// import GhostModal from \"@/components/ghostModal\";\n// import AlertModal from \"@/components/alertModal\";\n// import puzzle from \"@/assets/img/puzzle.png\";\n// import { useRecoilState } from \"recoil\";\n// import VerifyNumberModal from \"@/components/verifyNumberModal\";\n// import { useGetConsumeId } from \"@/apis/spend/Queris/useGetConsumeId\";\n// import { spendInfoState } from \"@/states/verifyState\";\n\n// const PageContainer = styled.div`\n//   position: fixed;\n//   top: 0;\n//   left: 0;\n//   width: 100%;\n//   height: 100%;\n//   background-image: url(${background});\n//   background-size: cover;\n//   background-attachment: scroll;\n// `;\n\n// const Backdrop = styled.div<{ isOpen: boolean }>`\n//   position: fixed;\n//   top: 0;\n//   left: 0;\n//   width: 100%;\n//   height: 100%;\n//   background: rgba(0, 0, 0, 0.8); /* Semi-transparent black background */\n//   display: ${(props) => (props.isOpen ? \"block\" : \"none\")};\n//   z-index: 1;\n// `;\n\n// const ContentContainer = styled.div`\n//   display: flex;\n//   justify-content: center; /* 수평 중앙 정렬 */\n//   align-items: center; /* 수직 중앙 정렬 */\n//   flex-direction: row; /* 수평 정렬로 변경 */\n//   height: 100%;\n//   width: 100%;\n// `;\n\n// const CardContainer = styled.div`\n//   padding: 70px 55px;\n// `;\n\n// const Title = styled.div`\n//   font-size: 60px;\n//   color: white;\n//   font-family: \"Brodies\";\n// `;\n\n// const TitleContainer = styled.div`\n//   padding: 0px 0px 0px 55px;\n//   text-align: left;\n// `;\n\n// const HashtagContainer = styled.div`\n//   display: flex;\n//   flex-wrap: wrap;\n//   gap: 10px;\n//   width: 700px;\n// `;\n\n// const ContentWrapper = styled.div`\n//   display: flex;\n//   flex-direction: column;\n//   height: 100%;\n//   padding: 25px 0px 25px 0px;\n// `;\n\n// const TextBubbleContainer = styled.div`\n//   margin-bottom: 10px; /* 각 텍스트 버블 사이의 간격 조정 */\n// `;\n\n// const ModalContainer = styled.div<{ isOpen: boolean }>`\n//   position: fixed;\n//   top: 50%;\n//   left: 50%;\n//   transform: translate(-50%, -50%);\n//   padding: 20px;\n//   display: ${(props) => (props.isOpen ? \"block\" : \"none\")};\n//   z-index: 3;\n// `;\n\n// const PuzzleModalContainer = styled.div<{ isPuzzleOpen: boolean }>`\n//   position: fixed;\n//   top: 50%;\n//   left: 50%;\n//   transform: translate(-50%, -50%);\n//   padding: 20px;\n//   display: ${(props) => (props.isPuzzleOpen ? \"block\" : \"none\")};\n//   z-index: 3;\n// `;\n\n// const SpendPage: React.FC = () => {\n//   const [isModalOpen, setIsModalOpen] = useState(false); // 모달 열림 여부 상태\n//   const [isPuzzleModalOpen, setIsPuzzleModalOpen] = useState(false);\n//   const [ConsumeIdInfo, setConsumeIdInfo] = useRecoilState(spendInfoState);\n\n//   const consume = useGetConsumeId(4);\n\n//   useEffect(() => {\n//     setConsumeIdInfo(consume);\n//   }, [setConsumeIdInfo, consume]);\n\n//   // 모달 열기 함수\n//   const toggleModal: () => void = () => {\n//     setIsModalOpen(!isModalOpen);\n//   };\n\n//   // 모달 열기 함수\n//   const openModal = () => {\n//     setIsModalOpen(true);\n//   };\n\n//   // 모달 닫기 함수\n//   const closeModal = () => {\n//     setIsModalOpen(false);\n//   };\n\n//   const openPuzzleModal = () => {\n//     setIsPuzzleModalOpen(true);\n//   };\n\n//   const closePuzzleModal = () => {\n//     setIsPuzzleModalOpen(false);\n//   };\n\n//   const titleTextBubbleProps: StyledTextBubbleProps = {\n//     text: \"🌟 마녀 🌟\",\n//     width: \"136PX\",\n//     background: \"#4D1B2D80\",\n//     opacity: \"1\",\n//     paddingLeftRight: \"28px\",\n//     paddingTopBottom: \"15px\",\n//     borderRadius: \"10px\",\n//     hoverable: false,\n//   };\n\n//   const contentTextBubbleProps: StyledTextBubbleProps = {\n//     text: `${ConsumeIdInfo.card.description.replace(/\\n/g, \"\\n\")}`,\n//     width: \"650px\",\n//     background: \"#4D1B2D80\",\n//     opacity: \"1\",\n//     paddingLeftRight: \"40px\",\n//     paddingTopBottom: \"40px\",\n//     borderRadius: \"20px\",\n//     hoverable: false,\n//   };\n\n//   const crystalTextBubbleProps: StyledTextBubbleProps = {\n//     text: `🔮 마녀에게 손을 내민다 🔮`,\n//     width: \"650px\",\n//     background: \"#4D1B2D80\",\n//     opacity: \"1\",\n//     paddingLeftRight: \"40px\",\n//     paddingTopBottom: \"20px\",\n//     borderRadius: \"20px\",\n//     hoverable: true,\n//   };\n\n//   const shareTextBubbleProps: StyledTextBubbleProps = {\n//     text: `🃏 나의 카드를 다른 사람들에게 공유한다 🃏`,\n//     width: \"650px\",\n//     background: \"#4D1B2D80\",\n//     opacity: \"1\",\n//     paddingLeftRight: \"40px\",\n//     paddingTopBottom: \"20px\",\n//     borderRadius: \"20px\",\n//     hoverable: true,\n//   };\n\n//   return (\n//     <div>\n//       <PageContainer>\n//         <ContentContainer>\n//           <CardContainer>\n//             <TarotCard\n//               width=\"300px\"\n//               height=\"402px\"\n//               cardWidth=\"100%\"\n//               cardSrc={tarotCardFront}\n//               imageSrc={tarotCardBack}\n//               bottomImageWidth=\"100%\"\n//               text={`${ConsumeIdInfo.card.name}`}\n//               fontsize=\"20px\"\n//             ></TarotCard>\n//           </CardContainer>\n//           <TitleContainer>\n//             <Title>This Week&apos;s Tarot Card</Title>\n//             <HashtagContainer>\n//               {ConsumeIdInfo.basicList.map((item) => (\n//                 <HashTag key={item.id} text={item.keyword} />\n//               ))}\n//             </HashtagContainer>\n//             <ContentWrapper>\n//               <TextBubbleContainer>\n//                 <TextBubble {...titleTextBubbleProps} />\n//               </TextBubbleContainer>\n//               <TextBubbleContainer>\n//                 <TextBubble {...contentTextBubbleProps} />\n//               </TextBubbleContainer>\n//               <TextBubbleContainer onClick={openPuzzleModal}>\n//                 <TextBubble {...crystalTextBubbleProps} />\n//               </TextBubbleContainer>\n//               <TextBubbleContainer onClick={openModal}>\n//                 <TextBubble {...shareTextBubbleProps} />\n//               </TextBubbleContainer>\n//             </ContentWrapper>\n//           </TitleContainer>\n//           <ModalContainer isOpen={isModalOpen}>\n//             <GhostModal zIndex={\"3\"} toggleModal={toggleModal} />\n//           </ModalContainer>\n//           <PuzzleModalContainer isPuzzleOpen={isPuzzleModalOpen}>\n//             <AlertModal\n//               width=\"600px\"\n//               topText=\"퍼즐을 찾았어요\"\n//               middleText=\"우리 함께 살펴볼까요?\"\n//               bottomText=\"내 진행상황 보러가기\"\n//               imageUrl={puzzle} // 이미지 경로\n//               topTextColor=\"#5E3A66\"\n//               middleTextColor=\"#5E3A66\"\n//               bottomTextColor=\"#EAE2ED\"\n//               upperSectionBackground=\"#EAE2ED\"\n//               lowerSectionBackground=\"#5E3A66\"\n//               topTextFontSize=\"28px\"\n//               middleTextFontSize=\"18px\"\n//               bottomTextFontSize=\"20px\"\n//               topTextPaddingTopBottom=\"20px\"\n//               middleTextPaddingTopBottom=\"6px\"\n//               middleTextPaddingLeftRight=\"0px\"\n//               topTextFontWeight=\"bold\"\n//               middleTextFontWeight=\"medium\"\n//               bottomTextFontWeight=\"medium\"\n//               zIndex={\"3\"}\n//               routerLink=\"/dictionary\"\n//             />\n//           </PuzzleModalContainer>\n//         </ContentContainer>\n//         <Backdrop isOpen={isModalOpen} onClick={closeModal} />\n//         <Backdrop isOpen={isPuzzleModalOpen} onClick={closePuzzleModal} />\n//       </PageContainer>\n//     </div>\n//   );\n// };\n\n// export default SpendPage;","map":{"version":3,"names":[],"sources":["C:/Users/SSAFY/Desktop/S09P22B308/frontend/src/pages/spendPattern/index.tsx"],"sourcesContent":["// import React, { useEffect, useState } from \"react\";\r\n// import styled from \"styled-components\";\r\n// import background from \"@/assets/img/background/silkBackground.jpg\";\r\n// import TarotCard from \"@/components/tarotCard\";\r\n// import tarotCardFront from \"@/assets/img/tarotCard/tarotCardFront.png\";\r\n// import tarotCardBack from \"@/assets/img/tarotCard/tarotCardBack.png\";\r\n// import HashTag from \"@/components/hashtag\";\r\n// import TextBubble from \"@/components/textBubble\";\r\n// import { StyledTextBubbleProps } from \"@/types/luckType\";\r\n// import GhostModal from \"@/components/ghostModal\";\r\n// import AlertModal from \"@/components/alertModal\";\r\n// import puzzle from \"@/assets/img/puzzle.png\";\r\n// import { useRecoilState } from \"recoil\";\r\n// import VerifyNumberModal from \"@/components/verifyNumberModal\";\r\n// import { useGetConsumeId } from \"@/apis/spend/Queris/useGetConsumeId\";\r\n// import { spendInfoState } from \"@/states/verifyState\";\r\n\r\n// const PageContainer = styled.div`\r\n//   position: fixed;\r\n//   top: 0;\r\n//   left: 0;\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   background-image: url(${background});\r\n//   background-size: cover;\r\n//   background-attachment: scroll;\r\n// `;\r\n\r\n// const Backdrop = styled.div<{ isOpen: boolean }>`\r\n//   position: fixed;\r\n//   top: 0;\r\n//   left: 0;\r\n//   width: 100%;\r\n//   height: 100%;\r\n//   background: rgba(0, 0, 0, 0.8); /* Semi-transparent black background */\r\n//   display: ${(props) => (props.isOpen ? \"block\" : \"none\")};\r\n//   z-index: 1;\r\n// `;\r\n\r\n// const ContentContainer = styled.div`\r\n//   display: flex;\r\n//   justify-content: center; /* 수평 중앙 정렬 */\r\n//   align-items: center; /* 수직 중앙 정렬 */\r\n//   flex-direction: row; /* 수평 정렬로 변경 */\r\n//   height: 100%;\r\n//   width: 100%;\r\n// `;\r\n\r\n// const CardContainer = styled.div`\r\n//   padding: 70px 55px;\r\n// `;\r\n\r\n// const Title = styled.div`\r\n//   font-size: 60px;\r\n//   color: white;\r\n//   font-family: \"Brodies\";\r\n// `;\r\n\r\n// const TitleContainer = styled.div`\r\n//   padding: 0px 0px 0px 55px;\r\n//   text-align: left;\r\n// `;\r\n\r\n// const HashtagContainer = styled.div`\r\n//   display: flex;\r\n//   flex-wrap: wrap;\r\n//   gap: 10px;\r\n//   width: 700px;\r\n// `;\r\n\r\n// const ContentWrapper = styled.div`\r\n//   display: flex;\r\n//   flex-direction: column;\r\n//   height: 100%;\r\n//   padding: 25px 0px 25px 0px;\r\n// `;\r\n\r\n// const TextBubbleContainer = styled.div`\r\n//   margin-bottom: 10px; /* 각 텍스트 버블 사이의 간격 조정 */\r\n// `;\r\n\r\n// const ModalContainer = styled.div<{ isOpen: boolean }>`\r\n//   position: fixed;\r\n//   top: 50%;\r\n//   left: 50%;\r\n//   transform: translate(-50%, -50%);\r\n//   padding: 20px;\r\n//   display: ${(props) => (props.isOpen ? \"block\" : \"none\")};\r\n//   z-index: 3;\r\n// `;\r\n\r\n// const PuzzleModalContainer = styled.div<{ isPuzzleOpen: boolean }>`\r\n//   position: fixed;\r\n//   top: 50%;\r\n//   left: 50%;\r\n//   transform: translate(-50%, -50%);\r\n//   padding: 20px;\r\n//   display: ${(props) => (props.isPuzzleOpen ? \"block\" : \"none\")};\r\n//   z-index: 3;\r\n// `;\r\n\r\n// const SpendPage: React.FC = () => {\r\n//   const [isModalOpen, setIsModalOpen] = useState(false); // 모달 열림 여부 상태\r\n//   const [isPuzzleModalOpen, setIsPuzzleModalOpen] = useState(false);\r\n//   const [ConsumeIdInfo, setConsumeIdInfo] = useRecoilState(spendInfoState);\r\n\r\n//   const consume = useGetConsumeId(4);\r\n\r\n//   useEffect(() => {\r\n//     setConsumeIdInfo(consume);\r\n//   }, [setConsumeIdInfo, consume]);\r\n\r\n//   // 모달 열기 함수\r\n//   const toggleModal: () => void = () => {\r\n//     setIsModalOpen(!isModalOpen);\r\n//   };\r\n\r\n//   // 모달 열기 함수\r\n//   const openModal = () => {\r\n//     setIsModalOpen(true);\r\n//   };\r\n\r\n//   // 모달 닫기 함수\r\n//   const closeModal = () => {\r\n//     setIsModalOpen(false);\r\n//   };\r\n\r\n//   const openPuzzleModal = () => {\r\n//     setIsPuzzleModalOpen(true);\r\n//   };\r\n\r\n//   const closePuzzleModal = () => {\r\n//     setIsPuzzleModalOpen(false);\r\n//   };\r\n\r\n//   const titleTextBubbleProps: StyledTextBubbleProps = {\r\n//     text: \"🌟 마녀 🌟\",\r\n//     width: \"136PX\",\r\n//     background: \"#4D1B2D80\",\r\n//     opacity: \"1\",\r\n//     paddingLeftRight: \"28px\",\r\n//     paddingTopBottom: \"15px\",\r\n//     borderRadius: \"10px\",\r\n//     hoverable: false,\r\n//   };\r\n\r\n//   const contentTextBubbleProps: StyledTextBubbleProps = {\r\n//     text: `${ConsumeIdInfo.card.description.replace(/\\n/g, \"\\n\")}`,\r\n//     width: \"650px\",\r\n//     background: \"#4D1B2D80\",\r\n//     opacity: \"1\",\r\n//     paddingLeftRight: \"40px\",\r\n//     paddingTopBottom: \"40px\",\r\n//     borderRadius: \"20px\",\r\n//     hoverable: false,\r\n//   };\r\n\r\n//   const crystalTextBubbleProps: StyledTextBubbleProps = {\r\n//     text: `🔮 마녀에게 손을 내민다 🔮`,\r\n//     width: \"650px\",\r\n//     background: \"#4D1B2D80\",\r\n//     opacity: \"1\",\r\n//     paddingLeftRight: \"40px\",\r\n//     paddingTopBottom: \"20px\",\r\n//     borderRadius: \"20px\",\r\n//     hoverable: true,\r\n//   };\r\n\r\n//   const shareTextBubbleProps: StyledTextBubbleProps = {\r\n//     text: `🃏 나의 카드를 다른 사람들에게 공유한다 🃏`,\r\n//     width: \"650px\",\r\n//     background: \"#4D1B2D80\",\r\n//     opacity: \"1\",\r\n//     paddingLeftRight: \"40px\",\r\n//     paddingTopBottom: \"20px\",\r\n//     borderRadius: \"20px\",\r\n//     hoverable: true,\r\n//   };\r\n\r\n//   return (\r\n//     <div>\r\n//       <PageContainer>\r\n//         <ContentContainer>\r\n//           <CardContainer>\r\n//             <TarotCard\r\n//               width=\"300px\"\r\n//               height=\"402px\"\r\n//               cardWidth=\"100%\"\r\n//               cardSrc={tarotCardFront}\r\n//               imageSrc={tarotCardBack}\r\n//               bottomImageWidth=\"100%\"\r\n//               text={`${ConsumeIdInfo.card.name}`}\r\n//               fontsize=\"20px\"\r\n//             ></TarotCard>\r\n//           </CardContainer>\r\n//           <TitleContainer>\r\n//             <Title>This Week&apos;s Tarot Card</Title>\r\n//             <HashtagContainer>\r\n//               {ConsumeIdInfo.basicList.map((item) => (\r\n//                 <HashTag key={item.id} text={item.keyword} />\r\n//               ))}\r\n//             </HashtagContainer>\r\n//             <ContentWrapper>\r\n//               <TextBubbleContainer>\r\n//                 <TextBubble {...titleTextBubbleProps} />\r\n//               </TextBubbleContainer>\r\n//               <TextBubbleContainer>\r\n//                 <TextBubble {...contentTextBubbleProps} />\r\n//               </TextBubbleContainer>\r\n//               <TextBubbleContainer onClick={openPuzzleModal}>\r\n//                 <TextBubble {...crystalTextBubbleProps} />\r\n//               </TextBubbleContainer>\r\n//               <TextBubbleContainer onClick={openModal}>\r\n//                 <TextBubble {...shareTextBubbleProps} />\r\n//               </TextBubbleContainer>\r\n//             </ContentWrapper>\r\n//           </TitleContainer>\r\n//           <ModalContainer isOpen={isModalOpen}>\r\n//             <GhostModal zIndex={\"3\"} toggleModal={toggleModal} />\r\n//           </ModalContainer>\r\n//           <PuzzleModalContainer isPuzzleOpen={isPuzzleModalOpen}>\r\n//             <AlertModal\r\n//               width=\"600px\"\r\n//               topText=\"퍼즐을 찾았어요\"\r\n//               middleText=\"우리 함께 살펴볼까요?\"\r\n//               bottomText=\"내 진행상황 보러가기\"\r\n//               imageUrl={puzzle} // 이미지 경로\r\n//               topTextColor=\"#5E3A66\"\r\n//               middleTextColor=\"#5E3A66\"\r\n//               bottomTextColor=\"#EAE2ED\"\r\n//               upperSectionBackground=\"#EAE2ED\"\r\n//               lowerSectionBackground=\"#5E3A66\"\r\n//               topTextFontSize=\"28px\"\r\n//               middleTextFontSize=\"18px\"\r\n//               bottomTextFontSize=\"20px\"\r\n//               topTextPaddingTopBottom=\"20px\"\r\n//               middleTextPaddingTopBottom=\"6px\"\r\n//               middleTextPaddingLeftRight=\"0px\"\r\n//               topTextFontWeight=\"bold\"\r\n//               middleTextFontWeight=\"medium\"\r\n//               bottomTextFontWeight=\"medium\"\r\n//               zIndex={\"3\"}\r\n//               routerLink=\"/dictionary\"\r\n//             />\r\n//           </PuzzleModalContainer>\r\n//         </ContentContainer>\r\n//         <Backdrop isOpen={isModalOpen} onClick={closeModal} />\r\n//         <Backdrop isOpen={isPuzzleModalOpen} onClick={closePuzzleModal} />\r\n//       </PageContainer>\r\n//     </div>\r\n//   );\r\n// };\r\n\r\n// export default SpendPage;\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA"},"metadata":{},"sourceType":"module","externalDependencies":[]}