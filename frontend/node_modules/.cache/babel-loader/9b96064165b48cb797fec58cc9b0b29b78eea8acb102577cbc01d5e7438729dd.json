{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SSAFY\\\\Desktop\\\\S09P22B308\\\\frontend\\\\src\\\\components\\\\donutGraph\\\\index.tsx\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport styled from \"styled-components\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DonutChartContainer = styled.svg`\n  width: ${props => props.size}px;\n  height: ${props => props.size}px;\n  &.donutchart {\n    margin: 0 auto;\n    border-radius: 50%;\n    display: block;\n  }\n`;\n_c = DonutChartContainer;\nconst DonutTrack = styled.circle`\n  fill: transparent;\n  stroke: #dae2e5;\n  stroke-width: ${props => props.strokewidth};\n`;\n_c2 = DonutTrack;\nconst DonutIndicator = styled.circle`\n  fill: transparent;\n  stroke: #7c5874;\n  stroke-width: ${props => props.strokewidth};\n  stroke-dasharray: ${props => props.dashval};\n  transition: stroke-dasharray 0.3s ease;\n`;\n_c3 = DonutIndicator;\nconst DonutText = styled.text`\n  fill: #fff;\n`;\n_c4 = DonutText;\nconst DonutTextVal = styled.tspan`\n  font-size: 22px;\n`;\n_c5 = DonutTextVal;\nconst DonutTextPercent = styled.tspan`\n  font-size: 16px;\n`;\n_c6 = DonutTextPercent;\nconst DonutTextLabel = styled.tspan`\n  margin-top: 10px;\n  font-size: 12px;\n`;\n_c7 = DonutTextLabel;\nfunction DonutChart({\n  value,\n  valuelabel,\n  size,\n  strokewidth\n}) {\n  _s();\n  const [dashval, setDashval] = useState(\"0 0\");\n  useEffect(() => {\n    const halfsize = size * 0.5;\n    const radius = halfsize - strokewidth * 0.5;\n    const circumference = 2 * Math.PI * radius;\n    const strokeval = value * circumference / 100;\n    const dashval = `${strokeval} ${circumference}`;\n    setDashval(dashval);\n  }, [value, size, strokewidth]);\n  const halfsize = size * 0.5;\n  const rotateval = `rotate(-90 ${halfsize},${halfsize})`;\n  return /*#__PURE__*/_jsxDEV(DonutChartContainer, {\n    width: size,\n    height: size,\n    className: \"donutchart\",\n    size: size,\n    children: [/*#__PURE__*/_jsxDEV(DonutTrack, {\n      r: halfsize - strokewidth * 0.5,\n      cx: halfsize,\n      cy: halfsize,\n      transform: rotateval,\n      strokewidth: strokewidth\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DonutIndicator, {\n      r: halfsize - strokewidth * 0.5,\n      cx: halfsize,\n      cy: halfsize,\n      transform: rotateval,\n      strokewidth: strokewidth,\n      dashval: dashval\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DonutText, {\n      x: halfsize,\n      y: halfsize,\n      style: {\n        textAnchor: \"middle\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(DonutTextVal, {\n        children: value\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DonutTextPercent, {\n        children: \"%\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(DonutTextLabel, {\n        x: halfsize,\n        y: halfsize + 17,\n        fill: \"#DACBD7\",\n        children: valuelabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n_s(DonutChart, \"y5C6LD480DAiF7lXlDvRew316wg=\");\n_c8 = DonutChart;\nexport default DonutChart;\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8;\n$RefreshReg$(_c, \"DonutChartContainer\");\n$RefreshReg$(_c2, \"DonutTrack\");\n$RefreshReg$(_c3, \"DonutIndicator\");\n$RefreshReg$(_c4, \"DonutText\");\n$RefreshReg$(_c5, \"DonutTextVal\");\n$RefreshReg$(_c6, \"DonutTextPercent\");\n$RefreshReg$(_c7, \"DonutTextLabel\");\n$RefreshReg$(_c8, \"DonutChart\");","map":{"version":3,"names":["React","useState","useEffect","styled","jsxDEV","_jsxDEV","DonutChartContainer","svg","props","size","_c","DonutTrack","circle","strokewidth","_c2","DonutIndicator","dashval","_c3","DonutText","text","_c4","DonutTextVal","tspan","_c5","DonutTextPercent","_c6","DonutTextLabel","_c7","DonutChart","value","valuelabel","_s","setDashval","halfsize","radius","circumference","Math","PI","strokeval","rotateval","width","height","className","children","r","cx","cy","transform","fileName","_jsxFileName","lineNumber","columnNumber","x","y","style","textAnchor","fill","_c8","$RefreshReg$"],"sources":["C:/Users/SSAFY/Desktop/S09P22B308/frontend/src/components/donutGraph/index.tsx"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport styled from \"styled-components\";\r\n\r\ninterface DonutChartProps {\r\n  value: number;\r\n  valuelabel: string;\r\n  size: number;\r\n  strokewidth: number;\r\n}\r\n\r\nconst DonutChartContainer = styled.svg<{ size: number }>`\r\n  width: ${(props) => props.size}px;\r\n  height: ${(props) => props.size}px;\r\n  &.donutchart {\r\n    margin: 0 auto;\r\n    border-radius: 50%;\r\n    display: block;\r\n  }\r\n`;\r\n\r\nconst DonutTrack = styled.circle<{ strokewidth: number }>`\r\n  fill: transparent;\r\n  stroke: #dae2e5;\r\n  stroke-width: ${(props) => props.strokewidth};\r\n`;\r\n\r\nconst DonutIndicator = styled.circle<{ strokewidth: number; dashval: string }>`\r\n  fill: transparent;\r\n  stroke: #7c5874;\r\n  stroke-width: ${(props) => props.strokewidth};\r\n  stroke-dasharray: ${(props) => props.dashval};\r\n  transition: stroke-dasharray 0.3s ease;\r\n`;\r\n\r\nconst DonutText = styled.text`\r\n  fill: #fff;\r\n`;\r\n\r\nconst DonutTextVal = styled.tspan`\r\n  font-size: 22px;\r\n`;\r\n\r\nconst DonutTextPercent = styled.tspan`\r\n  font-size: 16px;\r\n`;\r\n\r\nconst DonutTextLabel = styled.tspan`\r\n  margin-top: 10px;\r\n  font-size: 12px;\r\n`;\r\n\r\nfunction DonutChart({ value, valuelabel, size, strokewidth }: DonutChartProps) {\r\n  const [dashval, setDashval] = useState<string>(\"0 0\");\r\n\r\n  useEffect(() => {\r\n    const halfsize = size * 0.5;\r\n    const radius = halfsize - strokewidth * 0.5;\r\n    const circumference = 2 * Math.PI * radius;\r\n    const strokeval = (value * circumference) / 100;\r\n    const dashval = `${strokeval} ${circumference}`;\r\n    setDashval(dashval);\r\n  }, [value, size, strokewidth]);\r\n\r\n  const halfsize = size * 0.5;\r\n  const rotateval = `rotate(-90 ${halfsize},${halfsize})`;\r\n\r\n  return (\r\n    <DonutChartContainer\r\n      width={size}\r\n      height={size}\r\n      className=\"donutchart\"\r\n      size={size}\r\n    >\r\n      <DonutTrack\r\n        r={halfsize - strokewidth * 0.5}\r\n        cx={halfsize}\r\n        cy={halfsize}\r\n        transform={rotateval}\r\n        strokewidth={strokewidth}\r\n      />\r\n      <DonutIndicator\r\n        r={halfsize - strokewidth * 0.5}\r\n        cx={halfsize}\r\n        cy={halfsize}\r\n        transform={rotateval}\r\n        strokewidth={strokewidth}\r\n        dashval={dashval}\r\n      />\r\n      <DonutText x={halfsize} y={halfsize} style={{ textAnchor: \"middle\" }}>\r\n        <DonutTextVal>{value}</DonutTextVal>\r\n        <DonutTextPercent>%</DonutTextPercent>\r\n        <DonutTextLabel x={halfsize} y={halfsize + 17} fill=\"#DACBD7\">\r\n          {valuelabel}\r\n        </DonutTextLabel>\r\n      </DonutText>\r\n    </DonutChartContainer>\r\n  );\r\n}\r\n\r\nexport default DonutChart;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}