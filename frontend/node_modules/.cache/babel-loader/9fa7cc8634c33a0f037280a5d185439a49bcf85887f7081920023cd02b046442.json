{"ast":null,"code":"import axios from \"axios\";\nconst instance = axios.create({\n  //   baseURL: `${process.env.REACT_APP_SERVER_URL}/api`,\n\n  baseURL: `https://masoori.site/api`,\n  withCredentials: true,\n  headers: {\n    \"Content-Type\": \"application/json\",\n    Authorization: `Bearer ${localStorage.getItem(\"accessToken\") || undefined}`\n  }\n});\ninstance.interceptors.response.use(response => {\n  // 헤더를 뜯어서 accessToken을 저장한다\n  const accessToken = response.headers[\"x-access-token\"];\n  if (accessToken !== null && accessToken !== undefined) {\n    localStorage.setItem(\"accessToken\", accessToken);\n  }\n  return response;\n}, error => {\n  var _error$response;\n  if (((_error$response = error.response) === null || _error$response === void 0 ? void 0 : _error$response.status) === 401) {\n    // 로그아웃 시키고 로그인 PAGE로 리다이렉트\n    // localStorage.clear();\n    window.location.href = \"/main\";\n  }\n  return Promise.reject(error);\n});\nexport { instance };","map":{"version":3,"names":["axios","instance","create","baseURL","withCredentials","headers","Authorization","localStorage","getItem","undefined","interceptors","response","use","accessToken","setItem","error","_error$response","status","window","location","href","Promise","reject"],"sources":["C:/Users/SSAFY/Desktop/S09P22B308/frontend/src/apis/instance.ts"],"sourcesContent":["import axios, { Axios, AxiosError, AxiosResponse } from \"axios\";\r\n\r\nconst instance: Axios = axios.create({\r\n  //   baseURL: `${process.env.REACT_APP_SERVER_URL}/api`,\r\n\r\n  baseURL: `https://masoori.site/api`,\r\n  withCredentials: true,\r\n  headers: {\r\n    \"Content-Type\": \"application/json\",\r\n    Authorization: `Bearer ${localStorage.getItem(\"accessToken\") || undefined}`,\r\n  },\r\n});\r\n\r\ninstance.interceptors.response.use(\r\n  (response: AxiosResponse) => {\r\n    // 헤더를 뜯어서 accessToken을 저장한다\r\n    const accessToken = response.headers[\"x-access-token\"];\r\n    if (accessToken !== null && accessToken !== undefined) {\r\n      localStorage.setItem(\"accessToken\", accessToken);\r\n    }\r\n\r\n    return response;\r\n  },\r\n  (error: AxiosError) => {\r\n    if (error.response?.status === 401) {\r\n      // 로그아웃 시키고 로그인 PAGE로 리다이렉트\r\n      // localStorage.clear();\r\n      window.location.href = \"/main\";\r\n    }\r\n    return Promise.reject(error);\r\n  }\r\n);\r\n\r\nexport { instance };\r\n"],"mappings":"AAAA,OAAOA,KAAK,MAA4C,OAAO;AAE/D,MAAMC,QAAe,GAAGD,KAAK,CAACE,MAAM,CAAC;EACnC;;EAEAC,OAAO,EAAG,0BAAyB;EACnCC,eAAe,EAAE,IAAI;EACrBC,OAAO,EAAE;IACP,cAAc,EAAE,kBAAkB;IAClCC,aAAa,EAAG,UAASC,YAAY,CAACC,OAAO,CAAC,aAAa,CAAC,IAAIC,SAAU;EAC5E;AACF,CAAC,CAAC;AAEFR,QAAQ,CAACS,YAAY,CAACC,QAAQ,CAACC,GAAG,CAC/BD,QAAuB,IAAK;EAC3B;EACA,MAAME,WAAW,GAAGF,QAAQ,CAACN,OAAO,CAAC,gBAAgB,CAAC;EACtD,IAAIQ,WAAW,KAAK,IAAI,IAAIA,WAAW,KAAKJ,SAAS,EAAE;IACrDF,YAAY,CAACO,OAAO,CAAC,aAAa,EAAED,WAAW,CAAC;EAClD;EAEA,OAAOF,QAAQ;AACjB,CAAC,EACAI,KAAiB,IAAK;EAAA,IAAAC,eAAA;EACrB,IAAI,EAAAA,eAAA,GAAAD,KAAK,CAACJ,QAAQ,cAAAK,eAAA,uBAAdA,eAAA,CAAgBC,MAAM,MAAK,GAAG,EAAE;IAClC;IACA;IACAC,MAAM,CAACC,QAAQ,CAACC,IAAI,GAAG,OAAO;EAChC;EACA,OAAOC,OAAO,CAACC,MAAM,CAACP,KAAK,CAAC;AAC9B,CACF,CAAC;AAED,SAASd,QAAQ"},"metadata":{},"sourceType":"module","externalDependencies":[]}