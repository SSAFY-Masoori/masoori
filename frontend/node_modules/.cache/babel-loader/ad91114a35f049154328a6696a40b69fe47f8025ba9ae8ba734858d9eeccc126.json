{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useQuery } from \"@tanstack/react-query\";\nimport { getChallengeCard } from \"@/apis/dictionary/dictionaryAPI\";\nconst useChallengeCard = id => {\n  _s();\n  // id가 0이 아닌 경우에만 요청을 보내도록 조건 추가\n  const {\n    data\n  } = id !== 0 ? useQuery([\"challengeCard\", id], () => getChallengeCard(id)) : {\n    data: null\n  };\n  return data;\n};\n_s(useChallengeCard, \"4ZpngI1uv+Uo3WQHEZmTQ5FNM+k=\", false, function () {\n  return [useQuery];\n});\nexport { useChallengeCard };","map":{"version":3,"names":["useQuery","getChallengeCard","useChallengeCard","id","_s","data"],"sources":["C:/Users/SSAFY/Desktop/S09P22B308/frontend/src/apis/dictionary/Queries/useChallengeCard.ts"],"sourcesContent":["import { useQuery } from \"@tanstack/react-query\";\r\nimport { getChallengeCard } from \"@/apis/dictionary/dictionaryAPI\";\r\n\r\nconst useChallengeCard = (id: number) => {\r\n  // id가 0이 아닌 경우에만 요청을 보내도록 조건 추가\r\n  const { data } =\r\n    id !== 0\r\n      ? useQuery([\"challengeCard\", id], () => getChallengeCard(id))\r\n      : { data: null };\r\n  return data;\r\n};\r\n\r\nexport { useChallengeCard };\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,uBAAuB;AAChD,SAASC,gBAAgB,QAAQ,iCAAiC;AAElE,MAAMC,gBAAgB,GAAIC,EAAU,IAAK;EAAAC,EAAA;EACvC;EACA,MAAM;IAAEC;EAAK,CAAC,GACZF,EAAE,KAAK,CAAC,GACJH,QAAQ,CAAC,CAAC,eAAe,EAAEG,EAAE,CAAC,EAAE,MAAMF,gBAAgB,CAACE,EAAE,CAAC,CAAC,GAC3D;IAAEE,IAAI,EAAE;EAAK,CAAC;EACpB,OAAOA,IAAI;AACb,CAAC;AAACD,EAAA,CAPIF,gBAAgB;EAAA,QAIdF,QAAQ;AAAA;AAKhB,SAASE,gBAAgB"},"metadata":{},"sourceType":"module","externalDependencies":[]}